#: vim: set ft=dosini :
[global]
# Operate in this domain, all records are "directly" in this zone (with no delegation)
domain_name     = "dnslb"

# delete unknown records from database
delete_unknowns = true

# minimum log level
loglevel        = "debug"

# How many records can be checked in parallel
# note that all checks for one record are done in parallel and count as 1
# towards this limit until last one finishes (or timeouts).
# This should be used to prevent hitting ulimit on open files,
# ulimit should be greater than maxrecordchecks * #max_addresses_per_record * 3
# (not sure about the constant 3, this is mainly for filedescriptors
#  that are opened for communicating with actual check)
max_record_checks = 10

[mysql]
unix_socket = "/var/run/mysqld/mysqld.sock"
database    = "dns"
charset     = "utf8mb4"


[default]
ttl          = 1
interval     = 10
timeout      = 5
dns_timeout  = 3

[records."dbrep.gm".A]
dest     = [ "gmsql3.cent", "gmsql4.cent" ]
shift    = 3
check    = [ "/usr/bin/mysql", "-h", "%(address)s", "-u", "healthcheck", "-phealthcheck", "-Bse", "select 'GOOD';" ]
expect   = "(^|\n)GOOD(\n|$)"
fallback = "gmsql1.cent"

# If check returns priority information (integer) we can parse it
# by following regexp (default empty):
# prio_regex = "^OK: priority ([0-9]+)"

# Minimum count of servers when disabling servers by priority
# Example:
#   Let prio_min_cnt == 3.
#   Assume checks return priorities 4, 3, 2, 2, 2, 1, 1 for our seven servers.
#   Then result will have 5 entries (priority 2 and higher) as priority
#   3 and higher do not satisfy minimum server count (prio_min_cnt) whereas
#   priority 2 and higehr does.
# prio_min_cnt = 1
